"use strict";(self.webpackChunkjupyter_session_tracer=self.webpackChunkjupyter_session_tracer||[]).push([[920],{920:(e,n,o)=>{o.r(n),o.d(n,{default:()=>d});var t,s=o(424),a=o(88),i=o(577),r=o(560),c=o(256);class l{constructor(e,n,o){this.app=e,this.docManager=n,this.notebookTracker=o}start(){console.log("Starting Session Tracer..."),this.setupNotebookTracking()}setupNotebookTracking(){this.notebookTracker.widgetAdded.connect(((e,n)=>{console.log("Notebook opened:",n.context.path),n.context.sessionContext.kernelChanged.connect(((e,o)=>{var t,s,a;console.log("Kernel changed for notebook:",n.context.path,{oldKernelId:null===(t=o.oldValue)||void 0===t?void 0:t.id,newKernelId:null===(s=o.newValue)||void 0===s?void 0:s.id,kernelName:null===(a=o.newValue)||void 0===a?void 0:a.name})})),n.context.fileChanged.connect((()=>{console.log("Notebook saved:",n.context.path)}))})),this.notebookTracker.currentChanged.connect(((e,n)=>{n&&console.log("Notebook activated:",n.context.path)}))}getCurrentSessionInfo(){var e,n;const o=this.notebookTracker.currentWidget,t={timestamp:(new Date).toISOString(),jupyterlabVersion:this.app.version,currentWidget:null==o?void 0:o.title.label};if(o){const s=this.app.serviceManager.serverSettings.baseUrl,a=o.context.path;t.notebookPath=`${s}${a}`,t.sessionName=null===(e=o.context.sessionContext.session)||void 0===e?void 0:e.name;const i=null===(n=o.context.sessionContext.session)||void 0===n?void 0:n.kernel;i&&(t.kernelId=i.id,t.kernelName=i.name,t.kernelState=i.connectionStatus)}return t}getFormattedSessionInfo(){const e=this.getCurrentSessionInfo();return JSON.stringify(e,null,2)}stop(){console.log("Session Tracer stopped")}}class p extends c.Widget{constructor(e){super(),this.sessionData=e,this.addClass("jp-SessionPopup"),this.title.label="Session Information",this.title.closable=!0,this.createContent()}createContent(){const e=document.createElement("div");e.className="jp-SessionPopup-container";const n=document.createElement("div");n.className="jp-SessionPopup-header",n.innerHTML="\n      <h2>üìä Session Information</h2>\n      <p>Current JupyterLab session details</p>\n    ";const o=document.createElement("button");o.className="jp-SessionPopup-copyButton",o.innerHTML="üìã Copy to Clipboard",o.onclick=()=>this.copyToClipboard();const t=document.createElement("div");t.className="jp-SessionPopup-json";const s=document.createElement("pre");s.className="jp-SessionPopup-jsonContent";const a=document.createElement("code");a.className="language-json",a.textContent=JSON.stringify(this.sessionData,null,2),s.appendChild(a),t.appendChild(s);const i=document.createElement("div");i.className="jp-SessionPopup-summary",i.innerHTML=this.createSummaryHTML(),e.appendChild(n),e.appendChild(i),e.appendChild(o),e.appendChild(t),this.node.appendChild(e),this.copyToClipboard(),this.applySyntaxHighlighting(a)}createSummaryHTML(){const e=this.sessionData;return`\n      <div class="jp-SessionPopup-summaryGrid">\n        <div class="jp-SessionPopup-summaryItem">\n          <strong>üìì Current Notebook:</strong> \n          <span>${e.notebookPath||"None"}</span>\n        </div>\n        <div class="jp-SessionPopup-summaryItem">\n          <strong>üß† Kernel:</strong> \n          <span>${e.kernelName||"None"} (${e.kernelState||"Unknown"})</span>\n        </div>\n        <div class="jp-SessionPopup-summaryItem">\n          <strong>‚è∞ Timestamp:</strong> \n          <span>${new Date(e.timestamp).toLocaleString()}</span>\n        </div>\n        <div class="jp-SessionPopup-summaryItem">\n          <strong>üîß JupyterLab Version:</strong> \n          <span>${e.jupyterlabVersion||"Unknown"}</span>\n        </div>\n      </div>\n    `}applySyntaxHighlighting(e){const n=(e.textContent||"").replace(/"([^"]+)":/g,'<span class="json-key">"$1"</span>:').replace(/:\s*"([^"]*)"/g,': <span class="json-string">"$1"</span>').replace(/:\s*(\d+)/g,': <span class="json-number">$1</span>').replace(/:\s*(true|false)/g,': <span class="json-boolean">$1</span>').replace(/:\s*null/g,': <span class="json-null">null</span>');e.innerHTML=n}async copyToClipboard(){try{const e=JSON.stringify(this.sessionData,null,2);await navigator.clipboard.writeText(e),this.showCopyFeedback(),console.log("Session data copied to clipboard")}catch(e){console.error("Failed to copy to clipboard:",e),this.selectAllText()}}showCopyFeedback(){const e=this.node.querySelector(".jp-SessionPopup-copyButton");if(e){const n=e.innerHTML;e.innerHTML="‚úÖ Copied!",e.style.backgroundColor="#4CAF50",setTimeout((()=>{e.innerHTML=n,e.style.backgroundColor=""}),2e3)}}selectAllText(){const e=this.node.querySelector(".jp-SessionPopup-jsonContent");if(e){const n=document.createRange();n.selectNodeContents(e);const o=window.getSelection();o&&(o.removeAllRanges(),o.addRange(n))}}updateSessionData(e){this.sessionData=e,this.node.innerHTML="",this.createContent()}}!function(e){e.showSessionInfo="session-tracer:show-info"}(t||(t={}));const d={id:"jupyter-session-tracer:plugin",description:"A JupyterLab extension that shows session information in a popup",autoStart:!0,requires:[s.IDocumentManager,a.INotebookTracker],optional:[i.IMainMenu,r.ICommandPalette],activate:(e,n,o,s,a)=>{console.log("JupyterLab extension jupyter-session-tracer is activated!");const i=new l(e,n,o);i.start();const d=t.showSessionInfo;if(e.commands.addCommand(d,{label:"üìä Show Session Info",caption:"Display current JupyterLab session information",execute:()=>{const n=i.getCurrentSessionInfo(),o=new p(n),t=new r.MainAreaWidget({content:o});t.id="session-info-popup",t.title.label="üìä Session Information",t.title.closable=!0,t.isAttached||e.shell.add(t,"main"),e.shell.activateById(t.id)}}),s){const n=new c.Menu({commands:e.commands});n.title.label="üìä Session Info",n.addItem({command:d}),s.addMenu(n)}a&&a.addItem({command:d,category:"Session Tracer"});const u=document.createElement("button");u.className="jp-ToolbarButton jp-SessionTracer-toolbarButton",u.title="Show Session Information",u.innerHTML="üìä",u.onclick=()=>{e.commands.execute(d)},u.style.cssText="\n      background: none;\n      border: none;\n      font-size: 16px;\n      padding: 4px 8px;\n      cursor: pointer;\n      border-radius: 4px;\n      margin: 0 4px;\n      transition: background-color 0.2s;\n    ",u.addEventListener("mouseenter",(()=>{u.style.backgroundColor="var(--jp-layout-color2)"})),u.addEventListener("mouseleave",(()=>{u.style.backgroundColor="transparent"}));const m=()=>{const e=document.querySelector(".jp-MenuBar");return!!e&&(e.appendChild(u),!0)};m()||setTimeout((()=>{m()}),1e3),console.log("Session tracer toolbar button added")}}}}]);